security:
    acl:
        connection: default
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: security.csrf.token_manager
            logout:       true
            anonymous:    true
            remember_me:
                key:      "%secret%"
                lifetime: 2592000
                path:     /
                domain:   ~
                user_provider: fos_userbundle

    access_control:
        - { path: ^/issue/hook/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/, role: ROLE_USER }
        
vmelnik_doctrine_encrypt:  
    # Secret key for encrypt algorithm. All secret key checks are encryptor tasks only.
    secret_key:           %secret_key% 
    #  Default and only one encryptor is aes256. If you want to provide your own - set encryptor_class
    encryptor:            aes256 
    #  If you want, you can use your own Encryptor. Encryptor must implements EncryptorInterface interface
    #  Default: VMelnik\DoctrineEncryptBundle\Encryptors\AES256Encryptor
    #encryptor_class:      ~ 
    #  You can optionally provide a service as an encryptor instead of specifying a class.  The service 
    #  must implement EncryptorInterface.  You do not need to provide encryptor_class if you provide the service.
    #encryptor_service:    ~
    #  Now it's only one db driver is supported - orm
    db_driver:            orm 
