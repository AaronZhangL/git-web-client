{% form_theme commit_form 'VersionControlGitControlBundle::FormTheme/_field-prototype.html.twig' %}

{% extends "VersionControlGitControlBundle::admincontent.layout.html.twig" %}


{% block topnavleft %}
    {% include 'VersionControlGitControlBundle::Partials/projectEnvironments.html.twig'  %}
{% endblock %}

{% block otherAlerts %}
    {% include 'VersionControlGitControlBundle::Partials/detachedHead.html.twig'  %}
{% endblock %}   

{% block header %}

    <h1 class="page-header">
           Commit
          <small>{{ project.title }}
            {% if (is_granted('MASTER', project)) %}
                (<span class="edit"><a href="{{ path('project_edit', { 'id': project.id }) }}" class="non-ajax">edit</a></span>)
            {% endif %}
        </small>
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="{{ path('home')}}"><i class="fa fa-product-hunt"></i> Projects</a>
        </li>
        <li class="active">
            <i class="fa fa-history"></i> Commit
        </li>
    </ol>
{% endblock %}

{% block sidemenu -%}
 {% include 'VersionControlGitControlBundle::Partials/sidemenu.html.twig'  %}
{% endblock %}

{% block content -%}

    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title"><i class="fa fa-clock-o fa-fw"></i> Current Branch: {{branchName|issueLink(project.id)|raw}}</h3>
        </div>
        <div class="box-body">
            
            
                        
            {% if(files|length > 0)%}
                {{ form_start(commit_form,{ 'attr': { 'class': 'form'}}) }}
                    {{ form_errors(commit_form) }} 

                    {% if(files|length > 200)%}
                        <div class="callout callout-warning">
                            <h4>To many files to List!</h4>

                            <p>There are over <strong>{{files|length}}</strong> files to commit. This is to many to list. Select "Commit all files" to commit all the files</p>
                        </div>
                        {{ form_label(commit_form.files) }}
                        {{ form_errors(commit_form.files) }}
                        {{ form_widget(commit_form.files,{ 'attr': { 'class': ''}}) }}  
                    {% else %}           
                        {{ form_label(commit_form.files) }}
                        {{ form_errors(commit_form.files) }}
                        {{ form_widget(commit_form.files,{ 'attr': { 'class': 'commit-file'}, 'project':project}) }}
                        
                        <div class="form-group">
                            <button id="commit-select-all" type="button" class="btn btn-default btn-sm" >Select All</button>
                            <button id="commit-deselect-all" type="button" class="btn btn-default btn-sm" >Deselect All</button>
                        </div>
                    {% endif %}
                    <div class="form-group">
                        {{ form_label(commit_form.comment) }}
                        {{ form_errors(commit_form.comment) }}
                        {{ form_widget(commit_form.comment,{ 'attr': { 'class': 'form-control', 'placeholder':'Enter a commit message here'}}) }}
                        
                        
                    </div>
                    {% if(commit_form.pushRemote is defined)%}
                        <div class="form-group">  
                            {{ form_label(commit_form.pushRemote) }}
                            {{ form_errors(commit_form.pushRemote) }}
                            {{ form_widget(commit_form.pushRemote) }}

                        </div>
                    {% endif %}
                    {% if(issueCount > 0) %}
                        <fieldset class="issue-options-fieldset">
                            <legend class="issue-options">
                                <label>
                                    <a href="#issue-options" data-toggle="collapse" class="collapse-icon collapsed non-ajax">Issue Options</a>
                                </label>
                            </legend>
                            <div class="collapse" id="issue-options">
                                <div class="form-group">
                                    {{ form_label(commit_form.issue) }}
                                    {{ form_errors(commit_form.issue) }}
                                    {{ form_widget(commit_form.issue,{ 'attr': { 'class': 'form-control issue-select'}}) }}
                                </div>

                                <div class="form-group">
                                    {{ form_label(commit_form.issueAction) }}
                                    {{ form_errors(commit_form.issueAction) }}
                                    {{ form_widget(commit_form.issueAction) }}
                                </div>

                            </div>
                        </fieldset>
                    {% endif %}
                    <div class="text-right">
                        <a href="{{ path('home') }}" class="btn btn-default" >Cancel</a>
                        {{ form_widget(commit_form.submit, { 'attr': {'class': ' btn-success submit','data-loading-text':'Committing...'} }) }}
                    </div>
                 
                {{ form_end(commit_form) }}

            {% else %}
                <div class="alert alert-info">There is nothing to commit in this branch</div>
            {% endif %}
        </div>
    </div>
            
    <!-- Modal -->
    <div class="modal fade" id="diff" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-body">Loading...</div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
            

{% endblock %}

 {% block footerJS %}
     <script>
     $(function(){
        $(document).on("hidden.bs.modal", ".modal:not(.local-modal)", function (e) {
            $(e.target).removeData("bs.modal").find(".modal-content").empty().html('<div class="modal-body">Loading...</div>');
        });
        
        function formatIssue (issue) {
            if (issue.loading) return issue.title;

            var markup = "<div class='select2-result-issues clearfix'>" +
              "<i class='menu-icon fa fa-bug bg-green'></i><div class='select2-result-issue_meta'>" +
                "<div class='select2-result-issue_title'>" + issue.title + "</div>";
              markup += "<div class='select2-result-issue_description'>#" + issue.id + " opened by "+issue.author+"</div>";
              markup += "</div></div>";

            return markup;
        }

        function formatIssueSelection (issue) {
          return issue.title;
        }
        if($(".issue-select").val()){
            $('#issue-options').collapse('show');
        }
    
        $(".issue-select").select2({
            multiple: false
            ,ajax: {
              url: "{{ path('issue_searchajax',{'id':project.id}) }}",
              dataType: 'json',
              delay: 250,
              data: function (term, page) {
                return {
                  keyword: term, // search term
                  page: page
                };
              },
              results: function(data, page) {
                  var formatedData = []; 
                  
                  $.each( data.results, function( index, issue ) {
                    //alert( name + ": " + count );
                    formatedData.push(issue);
                  });
                  return {
                    results: formatedData
                  };
                }
              /*processResults: function (data, params) {
                // parse the results into the format expected by Select2
                // since we are using custom formatting functions we do not need to
                // alter the remote JSON data, except to indicate that infinite
                // scrolling can be used
                params.page = params.page || 1;

                return {
                  results: data.items,
                  pagination: {
                    more: (params.page * 30) < data.total_count
                  }
                };
              }*/

            },
            initSelection: function(element, callback) {
                // the input tag has a value attribute preloaded that points to a preselected movie's id
                // this function resolves that id attribute to an object that select2 can render
                // using its formatResult renderer - that way the movie name is shown preselected
                var issueId=$(element).val();
                if (issueId!=="") {
                    $.ajax("{{ path('issue_findajax',{'id':project.id,'issueId':''}) }}/"+issueId, {
                        dataType: "json",
                        success:function(data){
                            if(data.success){
                                callback(data.result);
                            }else{
                                alert(data.error)
                            }
                        }
                    }
                    );
                }
            },
           // escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 1,
                    
                    
            formatResult: formatIssue, // omitted for brevity, see the source of this page
            formatSelection: formatIssueSelection,  // omitted for brevity, see the source of this page
            dropdownCssClass: "bigdrop", // apply css that makes the dropdown taller
            escapeMarkup: function (m) { return m; }  
            
            //templateResult: formatRepo, // omitted for brevity, see the source of this page
            //templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
          });
     });
     </script>
     
{% endblock %} 
